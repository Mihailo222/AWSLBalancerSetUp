resource "aws_vpc" "myvpc" {
 cidr_block = var.cidr
}
#igw -> attach it to a vpc -> define RT

#this is igw just created; its not giving access to subnets yet!!!
#for that we need RT
resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.myvpc.id
}
#RT-kako mreza tece ka nasim subnetovima
resource "aws_route_table" "rt" {
  vpc_id = aws_internet_gateway.myvpc.id
  route {
    cidr_block = "0.0.0.0/0" #destination address -> Ip addresses that are not from this VPC
    gateway_id = aws_internet_gateway.igw.id #create a gateway from which traffic is coming
    #rutiraj sve Ip adrese iz ovih public subnets koje zele da se kace na nesto izvan VPC-ja na igw koji ce ih dalje redirektovati ka zeljenom sajtu npr.
    #svaki put kada neka Ip adresa iz public subneta naseg VPC-ja zatrazi neku IP adresu van datog subneta, prebaci je na igw da je opsluzi
    #STA SE DESAVA AKO TRAZI ip ADRESU UNUTAR VPC-JA I KAKO SE TO HANDLEUJE
    #STA SE DESAVA AKO NEKO TRAZI NASU IP ADRESU (PUBLIC IP OF A RESOURCE), A MI NEMAMO KONFIGURISANU RT
    #chatgpt: Bez RT ne moze ni nama niko da pristupi kao clanovima public subneta niti mi mozemo njima
  }
}

resource "aws_subnet" "sub1" {
  vpc_id = aws_vpc.myvpc.id
  #my subnet range
  cidr_block = "10.0.0.0/24" #inside 10.0.0.0/16 vpc's range
  availability_zone = "us-east-1a"
  #public ip address form my public subnet
  map_public_ip_on_launch = true
  #assign all the instances in this subnet with IP addresses
  #npr ako ne zelis da ove instance budu vidljive tj njihove IP adrese na internetu, samo oznacis sa false i napravis NAT
  #gateway kojem dodelis public IP adresu za datu mrezu koji ce biti tu kako bi data instanca iz private subneta izasla na internet
  #moras i rutiranje dobro da konfigurises kako bi dozvolio protok ip adresama u subnet u tom slucaju
}

resource "aws_subnet" "sub2" {
  vpc_id = aws_vpc.myvpc.id
  cidr_block = "10.0.1.0/24" #inside 10.0.0.0/16 vpc's range
  availability_zone = "us-east-1b"
  map_public_ip_on_launch = true
  }

  #we need igw - default gateway in order for aws public subnets to be accessible via internet (kao default ruter koji konektuje nase mreze na intenret )


# MISLIM DA SLEDECE AWS_ROUTING RABLE ASOCIJACIJA OMOGUCUJE TRAFFIC U OBA SMERA   ??? Hajde da saznamo:

#povezivanje naseg subneta public subnet 1 sa tabelom za rutiranje koja je u sebi povezana sa igw
resource "aws_route_table_association" "rta1" {
  subnet_id = aws_subnet.sub1.id
  route_table_id = aws_route_table.rt
}
#zasto sub1 ima internet access? Zato sto je atacovana za igw koji rutira saobracaj ka internetu!
#da li po ovoj konfiguraciji internet useri imaju access mojoj instanci u public subnetu? Pa to zavisi od securiti grupa datog subneta
#default stanje public SG: nema nikakve inbound dozvole. Ti moras sam da konfigurises bilo koji vid inbound konekcije na datu instancu na kom god portu to bili (80, 22 ...) iako je instanca public
#ona ima public IP adresu, ali nije dostupna na datom portu public internetu sve dok ne konfigurises SG !!!


resource "aws_route_table_association" "rta2" {
  subnet_id = aws_subnet.sub2.id
  route_table_id = aws_route_table.rt
}

#cak i sa dobro odradjenim Security Groups, mi bez routing tabele ne bismo mogli da pristupimo instanci sa datom public IP adresom u public subnetu !!!
#to je koncept VPC-ja, dok npr. s3 bucket mozes da pristupis be rt, jer je on deo public clouda !!!
#RT se mora konfigurisati da pokazuje na igw na sve ips van vpc-ja, jer je ovo ipak virtual PRIVATE cloud koji mora da konfigurise RT kako bi se pristupilo cak i public IP adresama

#Zadatak nek ti bude da uvidis razliku izmedju NAT gatewaya. Da li je on neophodan za outound konekciju iz VPC private subneta ka internetu??

